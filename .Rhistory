formatted_data <- data.frame(
"error object name" = names(data_list),
"errorCode" = sapply(data_list, function(x) x$errorCode),
"errorDescription" = sapply(data_list, function(x) x$errorDescription)
)
write.csv(formatted_data, "transfer_phase_error_mapping.csv", row.names = FALSE)
#our first calculation
sale_quarter_1 <- 23432.23
sale_quarter_2<-234324
mid_year_sale <-sale_quarter_2+sale_quarter_1
print(mid_year_sale)
#our first calculation
sale_quarter_1 <- 23432.23
sale_quarter_2<-234324
mid_year_sale <-(sale_quarter_2+sale_quarter_1)*2
print(mid_year_sale)
TRUE & TRUE
TRUE & FALSE
X<=90
X<- 89
Y<-90
x>Y
x>y | TRUE
x>y | TRUE
X>Y | TRUE
#our first calculation
sale_quarter_1 <- 23432.23
sale_quarter_2<-234324
mid_year_sale <-(sale_quarter_2+sale_quarter_1)*2
if (mid_year_sale>50000){
print('it exceeds the target amount')
}
else { print ('it did not reach the target amount')}
#our first calculation
sale_quarter_1 <- 23432.23
sale_quarter_2<-234324
mid_year_sale <-(sale_quarter_2+sale_quarter_1)*2
if (mid_year_sale>50000){
print('it exceeds the target amount')
} else { print ('it did not reach the target amount')}
#our first calculation
sale_quarter_1 <- 23432.23
sale_quarter_2<-234324
mid_year_sale <-(sale_quarter_2+sale_quarter_1)*0.3
#using if else
if (mid_year_sale>50000){
print('it exceeds the target amount')
} else if(mid_year_sale>30000 & mid_year_sale<50000)
{ print ('middle condition')
}else {
print ('it did not reach the target amount')
}
#our first calculation
sale_quarter_1 <- 23432.23
sale_quarter_2<-234324
mid_year_sale <-(sale_quarter_2+sale_quarter_1)*0.2
print(mid_year_sale)
#using if else
if (mid_year_sale>50000){
print('it exceeds the target amount')
} else if(mid_year_sale>30000 & mid_year_sale<50000)
{ print ('middle condition')
}else {
print ('it did not reach the target amount')
}
sale_quarter_1 <- 23432.23
sale_quarter_2<-234324
mid_year_sale <- (sale_quarter_2+sale_quarter_1)*0.2
mid_year_sale
mid_year_sale <- (sale_quarter_2+sale_quarter_1)*0.3
mid_year_sale
#our first calculation
sale_quarter_1 <- 23432.23
sale_quarter_2<-234324
mid_year_sale <- (sale_quarter_2+sale_quarter_1)*0.02
print(mid_year_sale)
#using if else
if (mid_year_sale>50000){
print('it exceeds the target amount')
} else if(mid_year_sale>30000 & mid_year_sale<50000)
{ print ('middle condition')
}else {
print ('it did not reach the target amount')
}
library(tidyverse)
head(diamonds)
str(diamonds)
glimpse(diamonds)
colnames(diamonds)
#renaming column name
rename(diamonds, carat_new = carat)
rename(diamonds, carat_new = carat, cut_new = cut)
summarize(diamonds, mean_carat = mean(carat))
summarize(diamonds, max_carat = max(carat))
#plotting the data
ggplot(data = diamonds, aes(x = carat, y = price)) + geom_points()
#plotting the data
ggplot(data = diamonds, aes(x = carat, y = price)) + geom_point()
#plotting the data
ggplot(data = diamonds, aes(x = depth , y = price)) + geom_point()
#plotting the data
ggplot(data = diamonds, aes(x = carat , y = price, color = cut)) + geom_point()
ggplot(data = diamonds, aes( x = carat, y = price, color = cut)) + geom_point() + facet_wrap(cut)
ggplot(data = diamonds, aes( x = carat, y = price, color = cut)) + geom_point() + facet_wrap(~cut)
installed.packages()
tidyverse_update()
update.packages()
data("ToothGrowth")
View(ToothGrowth)
install.packages("dplyr")
library(dplyr)
filtered_tg <- filter(ToothGrowth, dose == 0.5)
filtered_tg
arrange( filtered_tg, len)
arrange(filter(ToothGrowth, dose == 0.5),len)
#Pipe funtion control + shift + m for pipe operator
filtered_toothgrowth <- ToothGrowth %>%
filter(dose == 0.5) %>%
arrange (len)
filtered_toothgrowth
#Pipe funtion control + shift + m for pipe operator
filtered_toothgrowth <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarize(mean_len = mean(len, na.rm = T), .group = "drop")
filtered_toothgrowth
#Pipe funtion control + shift + m for pipe operator
filtered_toothgrowth <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarize(mean_len = mean(len, na.rm = T), .group = "drop1")
#Pipe funtion control + shift + m for pipe operator
filtered_toothgrowth <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarize(mean_len = mean(len, na.rm = T), .group = "drop1")
print(filtered_toothgrowth)
#Pipe funtion control + shift + m for pipe operator
filtered_toothgrowth <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarize(mean_len = mean(len, na.rm = T))
print(filtered_toothgrowth)
#Pipe funtion control + shift + m for pipe operator [filter, group by and then summarized]
filtered_toothgrowth <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarize(mean_len = mean(len), .group = "drop1")
print(filtered_toothgrowth)
#Pipe funtion control + shift + m for pipe operator [filter, group by and then summarized]
filtered_toothgrowth <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarize(mean_len = mean(len, na.rm = T), .group = "drop1")
#na.rm = TRUE: This tells R to remove (ignore) any missing values (NAs) in the vector before calculating the mean
print(filtered_toothgrowth)
library(ggplot2)
data(diamonds)
View(diamonds)
head(diamonds)
str(diamonds)
colnames(diamonds)
glimpse(diamonds)
library(tidyverse)
mutate(diamonds, carat_2) #adding new column
mutate(diamonds, carat_2= carat*18) #adding new column
names<- c ("","","","" )
print(names)
names<- c ("","","","" )
age<-c ( , , , )
names<- c ("","","","" )
age<-c (, , , )
names<- c ("aa","bb","cc","dd" )
age<-c (12, 23, 42, 23)
people<- data.frame(names, age)
head(people)
colnames(people)
print(names)
people<-mutate(diamonds, age_in_5_years = age+5)
#adding new column
people<-mutate(people, age_in_5_years = age+5)
people
arrange(people, age)
filter(people, age<40)
fruits<- c("lemon","strawberry","durian","mango",'bluebarry')
rank<-c(4,2,5,3,1)
fruit_rank<- data.frame(fruits, rank)
arrange(fruit_rank, rank)
glimpse((fruit_rank))
library(tidyverse)
data("diamonds")
as_tibble(diamonds)
library(readxl)
install.packages(here)
install.packages("here")
install.packages("skimr")
install.packages("janitor")
install.packages("dplyr")
install.packages("palmerpen")
install.packages("palmerpenguins")
skim_without_charts(penguins)
#loading library
library(here)
library(skimr)
library(dplyr)
library(palmerpenguins)
skim_without_charts(penguins)
glimpse(penguins)
head(penguins)
penguins %>%
select(species)
library(dplyr)
penguins %>%
distinct(species)
penguins %>%
select(-species)
#selecting distinct values
penguins %>%
distinct(year)
#renaming column
penguins %>%
rename(new_island=island)
#renaming column
penguins %>%
rename(new_island=island) %>%
rename_with(penguins, tolower)
#renaming column
penguins %>%
rename_with(penguins, tolower)
#renaming column
penguins %>%
rename_with(penguins, tolower(island))
#renaming column
penguins %>%
clean_names(penguins)
library(janitor)
#renaming column
penguins %>%
clean_names(penguins)
rename(new_island=island)
clean_names(penguins)
rename(penguins, tolower)
#renaming column
penguins %>%
rename(penguins, tolower)
#renaming column
penguins %>%
rename_with(penguins, tolower)
#renaming column
penguins %>%
rename(island_new=island)
rename_with(penguins, tolower)
rename_with(penguins, toupper)
clean_names(penguins) # from janator function
penguins %>%
arrange(-bill_length_mm)
penguins2 <- penguins %>%  arrange(-bill_length_mm)
view(penguins2)
penguins2 <- penguins %>%  arrange(-bill_length_mm)
View(penguins2)
penguins %>% group_by(island) %>% drop_na() %>% summarize(mean_bill_length=mean(bill_length_mm))
penguins %>% group_by(island) %>% drop_na() %>% summarize(mean_bill_length=mean(bill_length_mm))
#loading library
library(here)
library(skimr)
library(dplyr)
library(palmerpenguins)
library(dplyr)
library(janitor)
library(tidyverse)
penguins %>% group_by(island) %>% drop_na() %>% summarize(mean_bill_length=mean(bill_length_mm))
head(penguins)
penguins %>% group_by(sex) %>% drop_na() %>% summarize(max = max(bill_length_mm))
penguins %>% group_by(island) %>% drop_na() %>% summarize(mean_bill_length=mean(bill_length_mm)) %>% arrange(mean_bill_length)
penguins %>% group_by(island) %>% drop_na() %>% summarize(mean_bill_length=mean(bill_length_mm)) %>% arrange(-mean_bill_length)
penguins %>% group_by(island) %>% drop_na() %>% summarize(mean_bill_length=mean(bill_length_mm,max = max(bill_length_mm))) %>% arrange(-mean_bill_length)
penguins %>% group_by(island) %>% drop_na() %>% summarize(mean_bill_length=mean(bill_length_mm),max = max(bill_length_mm)) %>% arrange(-mean_bill_length)
penguins %>% group_by(island,species,sex) %>% drop_na() %>% summarize(mean_bill_length=mean(bill_length_mm),max = max(bill_length_mm)) %>% arrange(-mean_bill_length)
penguins %>%
filter(sex == "male") %>%
group_by(island, species) %>%
summarize(max_bill=max(bill_depth_mm))
library(tidyverse)
library(skimr)
library(janitor)
booking_df <- read_csv("D:\google data course\sample_dataset\Hotel_bookings.csv")
booking_df <- read_csv("D:/google data course/sample_dataset/Hotel_bookings.csv")
booking_df
head(booking_df)
colnames(booking_df)
glimpse(booking_df)
skim_without_charts(booking_df)
trim_df <- booking_df %>% select(hotel, is_canceled, lead_time)
examle_df <- booking_df %>%
select(arrival_date_year, arrival_date_month) %>%
unite(arrival_date_month, c("arrival_date_month","arrival_date_year"), sep= " ")
example_df
example_df <- booking_df %>%
select(arrival_date_year, arrival_date_month) %>%
unite(arrival_date_month, c(arrival_date_month,arrival_date_year), sep= " ")
example_df
example_df <- booking_df %>%
select(arrival_date_year, arrival_date_month) %>%
unite(arrival_date_month, c(arrival_date_month,arrival_date_year), sep= "/ ")
example_df
mutate(examle_df,arrival_month_year = unite(arrival_date_year,arrival_date_month))
mutate(examle_df,arrival_month_year =arrival_date_year + arrival_date_month)
mutate(examle_df,arrival_month_year = arrival_date_year + arrival_date_month)
ex_df<-mutate(examle_df,arrival_month_year = paste (arrival_date_year, arrival_date_month))
ex_df<-mutate(examle_df,arrival_month_year = paste (examle_df.arrival_date_year, examle_df.arrival_date_month))
ex_df<-mutate(examle_df,arrival_month_year = arrival_date_month+ 1)
ex_df<-mutate(booking_df,arrival_month_year = arrival_date_month+ 1)
ex_df<-mutate(booking_df,arrival_month_year = paste(arrival_date_month, "11"))
ex_df
ex_df<-mutate(booking_df,test = paste(arrival_date_month, "11"))
ex_df
ex_df %>%
select(test)
ex_df<-mutate(booking_df,test = paste(arrival_date_month, arrival_date_year))
ex_df %>%
select(test)
ex_df %>%
distinct(test)
rename(ex_df, test="month_year")
rename(ex_df, month_year="test")
ex_df %>%
distinct(month_year)
rename(ex_df, month_year="test")
ex_df<- rename(ex_df, month_year="test")
ex_df %>%
distinct(month_year)
example_dataframe <- bookding_df %>%
summarize(number_canceled = sum(is_cancled), average_lead_time = mean(lead_time))
example_dataframe <- booking_df %>%
summarize(number_canceled = sum(is_cancled), average_lead_time = mean(lead_time))
example_dataframe <- booking_df %>%
summarize(number_canceled = sum(is_canceled), average_lead_time = mean(lead_time))
example_dataframe
id <- c(1:10)
id
#manually creating a new dataframe
id <- c(1:10)
id
name <- c("John Mendes", "Rob Stewart", "Rachel Abrahamson", "Christy Hickman", "Johnson Harper", "Candace Miller", "Carlson Landy", "Pansy Jordan", "Darius Berry", "Claudia Garcia")
job_title <- c("Professional", "Programmer", "Management", "Clerical", "Developer", "Programmer", "Management", "Clerical", "Developer", "Programmer")
employee <- data.frame(id, name, job_title)
print(employee)
separate(employee, name,  into= c ('first name', 'last name'), sep =" ")
column_separated <-separate(employee, name,  into= c ('first_name', 'last_name'), sep =" ")
unite(column_separated, "name", first_name,last_name )
unite(column_separated, "name", first_name,' ', last_name )
unite(column_separated, "name", first_name, last_name, sep= ' ' )
library(palmerpenguins)
library(palmerpenguins)
penguins %>%
mutate(body_mass_kg =body_mass_g/100)
penguins %>%
mutate(body_mass_kg =body_mass_g/100, fipper_length_m = flipper_length_mm/1000)
penguins %>%
mutate(body_mass_kg =body_mass_g/100, fipper_length_m = flipper_length_mm/1000) %>%
arrange(bill_length_mm)
install.packages("Tmisc")
library(Tmisc)
head(quartet)
quartet %>%
group_by(set) %>%
summarize(min(x),sd(x),mean(y),sd(y), cor(xy))
quartet %>%
group_by(set) %>%
summarize(min(x),sd(x),mean(y),sd(y), cor(x, y))
ggplot(quartet, aes(x,y))+ geom_point() + geom_smooth(method = lm, se= FALSE) + facet_wrap(~ set)
ggplot(quartet, aes(x,y))+ geom_point() +  facet_wrap(~ set)
ggplot(quartet, aes(x,y))+ geom_point() + geom_smooth(method = lm, se= FALSE) + facet_wrap(~ set)
install.packages("datasauRus")
library(datasauRus)
ggplot(datasaurus_dozen, aes(x=x, y=y, colour = dataset)) + geom_point() + theme_void() + theme(legend.position = "none")
ggplot(datasaurus_dozen, aes(x=x, y=y, colour = dataset)) + geom_point() + theme_void() + theme(legend.position = "none") + facet_wrap(~dataset
ggplot(datasaurus_dozen, aes(x=x, y=y, colour = dataset)) + geom_point() + theme_void() + theme(legend.position = "none") + facet_wrap(~dataset
#plotting datasauRus data
ggplot(datasaurus_dozen, aes(x=x, y=y, colour = dataset)) + geom_point() + theme_void() + theme(legend.position = "none") + facet_wrap(~dataset)
install.packages("SimDesign")
library(SimDesign)
actual_temp <- c(68.3, 70, 72.4, 71, 67, 70)
predicted_tem <- c (67.9, 69, 71.5, 70, 67,69)
bias(actual_temp, predicted_tem)
actual_sale <- c(50, 203, 137, 247, 116, 287)
predicted_sale <- c(200, 300, 150, 250, 150, 300)
bias(actual_sale, predicted_sale)
actual_sale <- c(150, 203, 137, 247, 116, 287)
predicted_sale <- c(200, 300, 150, 250, 150, 300)
bias(actual_sale, predicted_sale)
actual_sale <- c(150, 203, 137, 247, 116, 287)
predicted_sale <- c(20, 30, 15, 25, 15, 30)
bias(actual_sale, predicted_sale) # -35 predicted outcomes are larger than actual outcome
library(tidyverse)
library(skimr)
library(janitor)
booking_df <- read_csv("D:/google data course/sample_dataset/Hotel_bookings.csv")
example_dataframe <- booking_df %>%
summarize(number_canceled = sum(is_canceled), average_lead_time = mean(lead_time)) #summary of mean and total cancellation
example_dataframe
library(ToothGrowth)
data(ToothGrowth)
select(-supp)
ToothGrowth %>%
select(-supp)
ToothGrowth %>%
select(-supp) %>%
filter(dos!=0.5)
ToothGrowth %>%
select(-supp) %>%
filter(dose!=0.5)
data("penguins")
penguins %>%
drop_na() %>%
group_by(species) %>%
summarize(min_bill_depth= min(bill_depth_mm))
actual_sale <- c(150, 203, 137, 247, 116, 287)
predicted_sale <- c(200, 300, 150, 205, 150, 300)
updated_df<- data.frame(actual_sale, predicted_sale)
mutate(updated_df, bias_column= actual_sale - predicted_sale)
bias(actual_sale, predicted_sale) # -35 predicted outcomes are larger than actual outcome
actual_sale <- c(150, 203, 137, 247, 116, 287)
predicted_sale <- c(200, 300, 150, 205, 150, 300)
updated_df<- data.frame(actual_sale, predicted_sale)
updated_db <- mutate(updated_df, bias_column= actual_sale - predicted_sale)
updated_db %>%
summarize(mean(bias_column))
actual_sale <- c(150, 203, 137, 247, 116, 287)
predicted_sale <- c(200, 300, 150, 205, 150, 300)
updated_df<- data.frame(actual_sale, predicted_sale)
updated_db <- mutate(updated_df, bias_column= actual_sale - predicted_sale)
updated_db %>%
summarize(mean(bias_column))
bias(actual_sale, predicted_sale)
data("penguins")
library(tidyverse)
ggplot2(data=penguins, aes(x=flipper_length_mm, y=body_mass_g))+ geom_point()
data("penguins")
library(tidyverse)
library(ggplot2)
ggplot2(data=penguins, aes(x=flipper_length_mm, y=body_mass_g))+ geom_point()
data("penguins")
library(tidyverse)
library(ggplot2)
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g))+ geom_point()
data("penguins")
library(tidyverse)
library(ggplot2)
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, colors(species)))+ geom_point()
head(penguins)
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, colors= species))+ geom_point()
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, color= species))+ geom_point()
data("penguins")
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, color= species))+ geom_point()+ labs(title = "penguin data plotting")
ggplot(data=penguins, aes(x=bill_length_mm, y=bill_depth_mm, color= species))+ geom_point()+ labs(title = "penguin data plotting")
?geom_point
library(tidyverse)
library(skimr)
library(janitor)
#importind data from csv
booking_df <- read_csv("D:/google data course/sample_dataset/Hotel_bookings.csv")
ggplot(data= booking_df, aes(x= lead_time, y= children)) + geom_point()
ggplot(data= booking_df, aes(x= stays_in_weekend_nights, y= children)) + geom_point()
ggplot(data=penguins, aes(x=bill_length_mm, y=bill_depth_mm, color= species))+ geom_point()+ labs(title = "penguin data plotting")
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, color= species))+ geom_point()+ labs(title = "penguin data plotting")
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, shape= species))+ geom_point()+ labs(title = "penguin data plotting")
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, shape= species, color= species))+ geom_point()+ labs(title = "penguin data plotting")
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, shape= species, color= species, siz= species))+ geom_point()+ labs(title = "penguin data plotting")
ggplot(data=penguins, aes(x=bill_length_mm, y=bill_depth_mm, alpha= species))+ geom_point()+ labs(title = "penguin data plotting")
ggplot(data=penguins, aes(x=bill_length_mm, y=bill_depth_mm, alpha= species, color="purple"))+ geom_point()+ labs(title = "penguin data plotting")
ggplot(data=penguins, aes(x=bill_length_mm, y=bill_depth_mm, alpha= species))+ geom_point(color="purple")+ labs(title = "penguin data plotting")
ggplot(data=penguins, aes(x=bill_length_mm, y=bill_depth_mm, alpha= species))+ geom_smooth(color="purple")+ labs(title = "penguin data plotting")
ggplot(data=penguins, aes(x=bill_length_mm, y=bill_depth_mm))+ geom_smooth(color="purple")+ labs(title = "penguin data plotting")
ggplot(data=penguins, aes(x=bill_length_mm, y=bill_depth_mm))+ geom_smooth(color="purple")+ geom_point()+ labs(title = "penguin data plotting")
ggplot(data=penguins, aes(x=bill_length_mm, y=bill_depth_mm, linetype = species))+ geom_smooth(color="purple")+ geom_point()+ labs(title = "penguin data plotting")
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, shape= species, color= species, siz= species))+ geom_jitter()+ labs(title = "penguin data plotting")
ggplot(data=diamonds, aes(x= cut)) + geom_bar() # show the count of x
ggplot(data=diamonds, aes(x= cut)) + geom_bar(color="blue") # show the count of x
ggplot(data=diamonds, aes(x= cut, color="blue")) + geom_bar(color="blue") # show the count of x
ggplot(data=diamonds, aes(x= cut, color=cut)) + geom_bar(color="blue") # show the count of x
ggplot(data=diamonds, aes(x= cut, fill =cut)) + geom_bar(color="blue") # show the count of x
ggplot(data=diamonds, aes(x= cut, fill =clarity)) + geom_bar(color="blue") # show the count of x
ggplot(data=penguins, aes(x=flipper_length_mm, y = body_mass_g)) + geom_bar() +facet_wrap(~ species)
ggplot(data=penguins, aes(x=flipper_length_mm, y = body_mass_g)) + geom_point() +facet_wrap(~ species)
ggplot(data=diamonds, aes(x= cut, fill =clarity)) + geom_bar(color="blue") + facet_wrap(~cut) # show the count of x
ggplot(data=diamonds, aes(x= color, , fill =cut)) + geom_bar(color="blue") + facet_wrap(~cut) # show the count of x
ggplot(data=penguins, aes(x=flipper_length_mm, y = body_mass_g)) + geom_point() +facet_grid(sex ~ species)
ggplot(data=booking_df, aes(x=distribution_channel)) + geom_bar() + facet_wrap( ~deposit_type)
ggplot(data=booking_df, aes(x=distribution_channel)) + geom_bar()
ggplot(data=booking_df, aes(x=lead_time, y= children)) + geom_point()
ggplot(data= booking_df, aes(x=hotel))+ geom_bar()+facet_wrap(~market_segment)
onlineta_city_hotels <- filter(booking_df, hotel=="" & hotel_bookings$market_segment =="")
onlineta_city_hotels <- filter(booking_df, hotel=="" & booking_df$market_segment =="")
head(onlineta_city_hotels)
View(onlineta_city_hotels)
ggplot(data= booking_df, aes(x=hotel))+ geom_bar()
ggplot(data=penguins, aes(x=flipper_length_mm, y = body_mass_g, size = year)) + geom_point()
ggplot(data=penguins, aes(x=flipper_length_mm, y = body_mass_g, size = year)) + geom_point()  +facet_grid(sex ~ species)
ggplot(data=diamonds, aes(x= color, , fill =cut)) + geom_bar(color="blue") + facet_wrap(~cut) # show the count of x
install.packages("rmarkdown")
library(tidyverse)
library(palmerpenguins)
glimpse(penguins)
library(tidyverse)
library(palmerpenguins)
library(ggplot2)
library(palmerpenguins)
data(penguins)
View(penguins)
ggplot(data = penguins) +
geom_point(mapping = aes(x = flipper_length_mm, y = body_mass_g))
